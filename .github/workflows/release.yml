name: release

on:
  push:
    tags:
      - 'v*'

defaults:
  run:
    shell: bash

jobs:
  build-repos-zip:
    name: upload repos.zip
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: make repos.zip
        uses: ./.github/actions/make-repos-zip

      - name: upload repos.zip
        uses: actions/upload-artifact@v2
        with:
          name: repos.zip
          path: repos.zip

  build-rust-parser:
    name: target = ${{ matrix.build.target }}
    needs: ['build-repos-zip']
    runs-on: ${{ matrix.build.os }}
    env:
      OUTPUT: rust-parser-${{ matrix.build.target }}${{ matrix.build.exe }}
      FILELIST_PATH: filelist
    strategy:
      fail-fast: false
      matrix:
        build:
          - { os: ubuntu-latest,  features: jemallocator,            target: x86_64-unknown-linux-gnu }
          - { os: macos-latest,   features: jemallocator,            target: x86_64-apple-darwin }
          - { os: windows-latest,                         exe: .exe, target: x86_64-pc-windows-msvc }
          - { os: windows-latest,                         exe: .exe, target: x86_64-pc-windows-gnu }
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: download repos
        uses: actions/download-artifact@v2
        with:
          name: repos.zip

      - name: unzip repos
        run: unzip repos.zip

      - name: build rust-parser
        uses: ./.github/actions/make-rust-parser
        with:
          target: ${{ matrix.build.target }}
          cargoflags: --features=${{ matrix.build.features }} --release
          build_env: release

      - name: give rust-parser representative name
        run: cp rust-parser${{ matrix.build.exe }} ${{ env.OUTPUT }}

      - name: install ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0.0"

      - name: test rust-parser
        run: |
          echo "Rust: $(./rust-parser)" >> ${{ matrix.build.target }}.benchmark
          echo "Ruby: $(ruby ruby-parser.rb)" >> ${{ matrix.build.target }}.benchmark

          cat ${{ matrix.build.target }}.benchmark

      - name: upload ${{ env.OUTPUT }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.OUTPUT }}
          path: ${{ env.OUTPUT }}

      - name: upload ${{ matrix.build.target }}.benchmark
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.build.target }}.benchmark
          path: ${{ matrix.build.target }}.benchmark

  make-release:
    name: release
    needs:
      - 'build-repos-zip'
      - 'build-rust-parser'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      # Parsers
      - uses: actions/download-artifact@v2
        with: { name: rust-parser-x86_64-unknown-linux-gnu }

      - uses: actions/download-artifact@v2
        with: { name: rust-parser-x86_64-apple-darwin }

      - uses: actions/download-artifact@v2
        with: { name: rust-parser-x86_64-pc-windows-msvc.exe }

      - uses: actions/download-artifact@v2
        with: { name: rust-parser-x86_64-pc-windows-gnu.exe }

      - uses: actions/download-artifact@v2
        with:
          name: repos.zip

      # Benchmarks
      - uses: actions/download-artifact@v2
        with: { name: x86_64-unknown-linux-gnu.benchmark }

      - uses: actions/download-artifact@v2
        with: { name: x86_64-apple-darwin.benchmark }

      - uses: actions/download-artifact@v2
        with: { name: x86_64-pc-windows-msvc.benchmark }

      - uses: actions/download-artifact@v2
        with: { name: x86_64-pc-windows-gnu.benchmark }

      - name: merge benchmarks
        run: |
          ls -l
          echo "### Results for x86_64-unknown-linux-gnu:" >> release_notes.md
          echo "" >> release_notes.md
          cat x86_64-unknown-linux-gnu.benchmark >> release_notes.md
          echo "" >> release_notes.md

          echo "### Results for x86_64-apple-darwin:" >> release_notes.md
          echo "" >> release_notes.md
          cat x86_64-apple-darwin.benchmark >> release_notes.md
          echo "" >> release_notes.md

          echo "### Results for x86_64-pc-windows-msvc:" >> release_notes.md
          echo "" >> release_notes.md
          cat x86_64-pc-windows-msvc.benchmark >> release_notes.md
          echo "" >> release_notes.md

          echo "### Results for x86_64-pc-windows-gnu:" >> release_notes.md
          echo "" >> release_notes.md
          cat x86_64-pc-windows-gnu.benchmark >> release_notes.md

          cat release_notes.md

      - name: release
        uses: ncipollo/release-action@v1
        with:
          artifactErrorsFailBuild: true
          artifacts: "rust-parser-*,repos.zip,ruby-parser.rb"
          bodyFile: release_notes.md
          token: ${{ secrets.GITHUB_TOKEN }}
