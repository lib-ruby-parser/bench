name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  test-rust-parser:
    name: target = ${{ matrix.build.target }}
    runs-on: ${{ matrix.build.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - { os: ubuntu-latest,  features: jemallocator, target: x86_64-unknown-linux-gnu }
          - { os: macos-latest,   features: jemallocator, target: x86_64-apple-darwin      }
          - { os: windows-latest,                         target: x86_64-pc-windows-msvc   }
          - { os: windows-latest,                         target: x86_64-pc-windows-gnu    }
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: build rust-parser
        uses: ./.github/actions/make-rust-parser
        with:
          target: ${{ matrix.build.target }}
          cargoflags: --features=${{ matrix.build.features }}
          build_env: debug

      - name: make dummy data
        run: make dummy-repos dummy-filelist

      - name: test runner
        run: ./rust-parser
        env:
          FILELIST_PATH: dummy-filelist

  test-data:
    name: repos.zip
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: make repos.zip
        uses: ./.github/actions/make-repos-zip
